"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
const range_1 = require("../util/range");
const luxon_1 = require("luxon");
const testing_1 = require("../util/testing");
const timer_1 = require("../util/timer");
test('buildMatrix', () => {
    const poll = {};
    poll.options = {
        a: 'Mephis',
        b: 'Nashville',
        c: 'Chattanooga',
        d: 'Knoxville'
    };
    const genVotes = (keys) => {
        const votes = {};
        keys.map((k, i) => ({ k, r: i + 1 })).forEach(({ k, r }) => {
            votes[k] = {
                option: poll.options[k],
                rank: r,
            };
        });
        return votes;
    };
    const ballotCount = 1000;
    const ballots = (0, range_1.generateRange)(1, ballotCount, i => {
        const ballot = {};
        if (i <= (0.42 * ballotCount)) {
            ballot.votes = genVotes(['a', 'b', 'c', 'd']);
        }
        else if (i <= ((0.42 + 0.26) * ballotCount)) {
            ballot.votes = genVotes(['b', 'c', 'd', 'a']);
        }
        else if (i <= ((0.42 + 0.26 + 0.15) * ballotCount)) {
            ballot.votes = genVotes(['c', 'd', 'b', 'a']);
        }
        else {
            ballot.votes = genVotes(['d', 'c', 'b', 'a']);
        }
        return ballot;
    });
    const computeTimer = timer_1.Timer.startTimer();
    const r = (0, _1.computeResults)(poll, ballots);
    computeTimer.endTimer();
    console.log(computeTimer.elapsed().toISO());
    expect(computeTimer.elapsed().milliseconds).toBeLessThan(luxon_1.Duration.fromMillis(1000).milliseconds);
    expect(r).toBeDefined();
    const matrix = (0, testing_1.unsafe)(r === null || r === void 0 ? void 0 : r.matrix);
    expect((0, testing_1.unsafe)(matrix['c']['d']) / ballotCount).toBeCloseTo(0.83, 1);
    expect((0, testing_1.unsafe)(matrix['b']['d']) / ballotCount).toBeCloseTo(0.68, 1);
    expect((0, testing_1.unsafe)(matrix['b']['c']) / ballotCount).toBeCloseTo(0.68, 1);
    expect((0, testing_1.unsafe)(matrix['b']['a']) / ballotCount).toBeCloseTo(0.57, 1);
    expect((0, testing_1.unsafe)(matrix['c']['a']) / ballotCount).toBeCloseTo(0.57, 1);
    expect((0, testing_1.unsafe)(matrix['d']['a']) / ballotCount).toBeCloseTo(0.57, 1);
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[0][1]).toEqual(1);
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[1][1]).toEqual(2);
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[2][1]).toEqual(3);
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[3][1]).toEqual(4);
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[0][0]).toEqual('b');
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[1][0]).toEqual('c');
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[2][0]).toEqual('d');
    expect(r === null || r === void 0 ? void 0 : r.finalRankings[3][0]).toEqual('a');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZG9yY2V0LnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdm90aW5nL2NvbmRvcmNldC50ZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsd0JBQWtDO0FBRWxDLHlDQUE2QztBQUM3QyxpQ0FBb0Q7QUFDcEQsNkNBQXdDO0FBQ3hDLHlDQUFxQztBQUlyQyxJQUFJLENBQUMsYUFBYSxFQUFFLEdBQUcsRUFBRTtJQUNyQixNQUFNLElBQUksR0FBRyxFQUFVLENBQUE7SUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRztRQUNYLENBQUMsRUFBRSxRQUFRO1FBQ1gsQ0FBQyxFQUFFLFdBQVc7UUFDZCxDQUFDLEVBQUUsYUFBYTtRQUNoQixDQUFDLEVBQUUsV0FBVztLQUNqQixDQUFBO0lBRUQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxJQUFjLEVBQUUsRUFBRTtRQUNoQyxNQUFNLEtBQUssR0FBeUIsRUFBRSxDQUFBO1FBQ3RDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7WUFDdkQsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHO2dCQUNQLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztnQkFDdkIsSUFBSSxFQUFFLENBQUM7YUFDVixDQUFBO1FBQ0wsQ0FBQyxDQUFDLENBQUE7UUFDRixPQUFPLEtBQUssQ0FBQTtJQUNoQixDQUFDLENBQUE7SUFFRCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUE7SUFDeEIsTUFBTSxPQUFPLEdBQUcsSUFBQSxxQkFBYSxFQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDLEVBQUU7UUFDOUMsTUFBTSxNQUFNLEdBQUcsRUFBWSxDQUFBO1FBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxFQUFFO1lBQzNCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQTtTQUNoRDthQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsV0FBVyxDQUFDLEVBQUU7WUFDM0MsTUFBTSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFBO1NBQ2hEO2FBQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsV0FBVyxDQUFDLEVBQUU7WUFDbEQsTUFBTSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFBO1NBQ2hEO2FBQU07WUFDSCxNQUFNLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUE7U0FDaEQ7UUFDRCxPQUFPLE1BQU0sQ0FBQTtJQUNqQixDQUFDLENBQUMsQ0FBQTtJQUVGLE1BQU0sWUFBWSxHQUFHLGFBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUN2QyxNQUFNLENBQUMsR0FBRyxJQUFBLGlCQUFjLEVBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0lBQ3ZDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQTtJQUV2QixPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFBO0lBQzNDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsWUFBWSxDQUFDLGdCQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFBO0lBRWhHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUN2QixNQUFNLE1BQU0sR0FBRyxJQUFBLGdCQUFNLEVBQUMsQ0FBQyxhQUFELENBQUMsdUJBQUQsQ0FBQyxDQUFFLE1BQU0sQ0FBQyxDQUFBO0lBQ2hDLE1BQU0sQ0FBQyxJQUFBLGdCQUFNLEVBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUNuRSxNQUFNLENBQUMsSUFBQSxnQkFBTSxFQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDbkUsTUFBTSxDQUFDLElBQUEsZ0JBQU0sRUFBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ25FLE1BQU0sQ0FBQyxJQUFBLGdCQUFNLEVBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsV0FBVyxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUNuRSxNQUFNLENBQUMsSUFBQSxnQkFBTSxFQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDbkUsTUFBTSxDQUFDLElBQUEsZ0JBQU0sRUFBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBR25FLE1BQU0sQ0FBQyxDQUFDLGFBQUQsQ0FBQyx1QkFBRCxDQUFDLENBQUUsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUN6QyxNQUFNLENBQUMsQ0FBQyxhQUFELENBQUMsdUJBQUQsQ0FBQyxDQUFFLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUE7SUFDekMsTUFBTSxDQUFDLENBQUMsYUFBRCxDQUFDLHVCQUFELENBQUMsQ0FBRSxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3pDLE1BQU0sQ0FBQyxDQUFDLGFBQUQsQ0FBQyx1QkFBRCxDQUFDLENBQUUsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUV6QyxNQUFNLENBQUMsQ0FBQyxhQUFELENBQUMsdUJBQUQsQ0FBQyxDQUFFLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDM0MsTUFBTSxDQUFDLENBQUMsYUFBRCxDQUFDLHVCQUFELENBQUMsQ0FBRSxhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFBO0lBQzNDLE1BQU0sQ0FBQyxDQUFDLGFBQUQsQ0FBQyx1QkFBRCxDQUFDLENBQUUsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUMzQyxNQUFNLENBQUMsQ0FBQyxhQUFELENBQUMsdUJBQUQsQ0FBQyxDQUFFLGFBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDL0MsQ0FBQyxDQUFDLENBQUEifQ==